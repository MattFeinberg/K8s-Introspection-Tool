Name:         clusterpolicies.nvidia.com
Namespace:    
Labels:       <none>
Annotations:  controller-gen.kubebuilder.io/version: v0.4.1
API Version:  apiextensions.k8s.io/v1
Kind:         CustomResourceDefinition
Metadata:
  Creation Timestamp:  2022-06-13T17:25:33Z
  Generation:          1
  Managed Fields:
    API Version:  apiextensions.k8s.io/v1
    Fields Type:  FieldsV1
    fieldsV1:
      f:status:
        f:acceptedNames:
          f:kind:
          f:listKind:
          f:plural:
          f:singular:
        f:conditions:
          k:{"type":"Established"}:
            .:
            f:lastTransitionTime:
            f:message:
            f:reason:
            f:status:
            f:type:
          k:{"type":"NamesAccepted"}:
            .:
            f:lastTransitionTime:
            f:message:
            f:reason:
            f:status:
            f:type:
    Manager:      Go-http-client
    Operation:    Update
    Subresource:  status
    Time:         2022-06-13T17:25:33Z
    API Version:  apiextensions.k8s.io/v1
    Fields Type:  FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .:
          f:controller-gen.kubebuilder.io/version:
      f:spec:
        f:conversion:
          .:
          f:strategy:
        f:group:
        f:names:
          f:kind:
          f:listKind:
          f:plural:
          f:singular:
        f:scope:
        f:versions:
    Manager:         helm
    Operation:       Update
    Time:            2022-06-13T17:25:33Z
  Resource Version:  937
  UID:               8f6a3ca8-9b2d-4fa6-9c97-343c0036dc3c
Spec:
  Conversion:
    Strategy:  None
  Group:       nvidia.com
  Names:
    Kind:       ClusterPolicy
    List Kind:  ClusterPolicyList
    Plural:     clusterpolicies
    Singular:   clusterpolicy
  Scope:        Cluster
  Versions:
    Name:  v1
    Schema:
      openAPIV3Schema:
        Description:  ClusterPolicy is the Schema for the clusterpolicies API
        Properties:
          API Version:
            Description:  APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            Type:         string
          Kind:
            Description:  Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            Type:         string
          Metadata:
            Type:  object
          Spec:
            Description:  ClusterPolicySpec defines the desired state of ClusterPolicy
            Properties:
              Daemonsets:
                Description:  Daemonset defines common configuration for all Daemonsets
                Properties:
                  Priority Class Name:
                    Type:  string
                  Tolerations:
                    Description:  Optional: Set tolerations
                    Items:
                      Description:  The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                      Properties:
                        Effect:
                          Description:  Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          Type:         string
                        Key:
                          Description:  Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          Type:         string
                        Operator:
                          Description:  Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                          Type:         string
                        Toleration Seconds:
                          Description:  TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                          Format:       int64
                          Type:         integer
                        Value:
                          Description:  Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                          Type:         string
                      Type:             object
                    Type:               array
                Type:                   object
              Dcgm:
                Description:  DCGM component spec
                Properties:
                  Args:
                    Description:  Optional: List of arguments
                    Items:
                      Type:  string
                    Type:    array
                  Enabled:
                    Description:  Enabled indicates if deployment of DCGM hostengine as a separate pod is enabled.
                    Type:         boolean
                  Env:
                    Description:  Optional: List of environment variables
                    Items:
                      Description:  EnvVar represents an environment variable present in a Container.
                      Properties:
                        Name:
                          Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                          Type:         string
                        Value:
                          Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                          Type:         string
                        Value From:
                          Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                          Properties:
                            Config Map Key Ref:
                              Description:  Selects a key of a ConfigMap.
                              Properties:
                                Key:
                                  Description:  The key to select.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                            Field Ref:
                              Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              Properties:
                                API Version:
                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  Type:         string
                                Field Path:
                                  Description:  Path of the field to select in the specified API version.
                                  Type:         string
                              Required:
                                fieldPath
                              Type:  object
                            Resource Field Ref:
                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              Properties:
                                Container Name:
                                  Description:  Container name: required for volumes, optional for env vars
                                  Type:         string
                                Divisor:
                                  Any Of:
                                    Type:                              integer
                                    Type:                              string
                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                                Resource:
                                  Description:  Required: resource to select
                                  Type:         string
                              Required:
                                resource
                              Type:  object
                            Secret Key Ref:
                              Description:  Selects a key of a secret in the pod's namespace
                              Properties:
                                Key:
                                  Description:  The key of the secret to select from.  Must be a valid secret key.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the Secret or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                          Type:      object
                      Required:
                        name
                      Type:  object
                    Type:    array
                  Host Port:
                    Description:  HostPort represents host port that needs to be bound for DCGM engine (Default: 5555)
                    Format:       int32
                    Type:         integer
                  Image:
                    Description:  DCGM image name
                    Pattern:      [a-zA-Z0-9\-]+
                    Type:         string
                  Image Pull Policy:
                    Description:  Image pull policy
                    Type:         string
                  Image Pull Secrets:
                    Description:  Image pull secrets
                    Items:
                      Type:  string
                    Type:    array
                  Repository:
                    Description:  DCGM image repository
                    Type:         string
                  Resources:
                    Description:  Optional: Define resources requests and limits for each pod
                    Properties:
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                    Type:                                      object
                  Security Context:
                    Description:  Optional: Security Context
                    Properties:
                      Allow Privilege Escalation:
                        Description:  AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Capabilities:
                        Description:  The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Add:
                            Description:  Added capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                          Drop:
                            Description:  Removed capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                        Type:               object
                      Privileged:
                        Description:  Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Proc Mount:
                        Description:  procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
                        Type:         string
                      Read Only Root Filesystem:
                        Description:  Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Run As Group:
                        Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Run As Non Root:
                        Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Type:         boolean
                      Run As User:
                        Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Se Linux Options:
                        Description:  The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Level:
                            Description:  Level is SELinux level label that applies to the container.
                            Type:         string
                          Role:
                            Description:  Role is a SELinux role label that applies to the container.
                            Type:         string
                          Type:
                            Description:  Type is a SELinux type label that applies to the container.
                            Type:         string
                          User:
                            Description:  User is a SELinux user label that applies to the container.
                            Type:         string
                        Type:             object
                      Seccomp Profile:
                        Description:  The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Localhost Profile:
                            Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                            Type:         string
                          Type:
                            Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Windows Options:
                        Description:  The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                        Properties:
                          Gmsa Credential Spec:
                            Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            Type:         string
                          Gmsa Credential Spec Name:
                            Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            Type:         string
                          Host Process:
                            Description:  HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                            Type:         boolean
                          Run As User Name:
                            Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         string
                        Type:             object
                    Type:                 object
                  Version:
                    Description:  DCGM image tag
                    Type:         string
                Type:             object
              Dcgm Exporter:
                Description:  DCGMExporter spec
                Properties:
                  Args:
                    Description:  Optional: List of arguments
                    Items:
                      Type:  string
                    Type:    array
                  Config:
                    Description:  Optional: Custom metrics configuration for DCGM exporter
                    Properties:
                      Name:
                        Description:  ConfigMap name with file dcgm-metrics.csv for metrics to be collected by DCGM exporter
                        Type:         string
                    Type:             object
                  Env:
                    Description:  Optional: List of environment variables
                    Items:
                      Description:  EnvVar represents an environment variable present in a Container.
                      Properties:
                        Name:
                          Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                          Type:         string
                        Value:
                          Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                          Type:         string
                        Value From:
                          Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                          Properties:
                            Config Map Key Ref:
                              Description:  Selects a key of a ConfigMap.
                              Properties:
                                Key:
                                  Description:  The key to select.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                            Field Ref:
                              Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              Properties:
                                API Version:
                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  Type:         string
                                Field Path:
                                  Description:  Path of the field to select in the specified API version.
                                  Type:         string
                              Required:
                                fieldPath
                              Type:  object
                            Resource Field Ref:
                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              Properties:
                                Container Name:
                                  Description:  Container name: required for volumes, optional for env vars
                                  Type:         string
                                Divisor:
                                  Any Of:
                                    Type:                              integer
                                    Type:                              string
                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                                Resource:
                                  Description:  Required: resource to select
                                  Type:         string
                              Required:
                                resource
                              Type:  object
                            Secret Key Ref:
                              Description:  Selects a key of a secret in the pod's namespace
                              Properties:
                                Key:
                                  Description:  The key of the secret to select from.  Must be a valid secret key.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the Secret or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                          Type:      object
                      Required:
                        name
                      Type:  object
                    Type:    array
                  Image:
                    Description:  DCGM image name
                    Pattern:      [a-zA-Z0-9\-]+
                    Type:         string
                  Image Pull Policy:
                    Description:  Image pull policy
                    Type:         string
                  Image Pull Secrets:
                    Description:  Image pull secrets
                    Items:
                      Type:  string
                    Type:    array
                  Repository:
                    Description:  DCGM image repository
                    Type:         string
                  Resources:
                    Description:  Optional: Define resources requests and limits for each pod
                    Properties:
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                    Type:                                      object
                  Security Context:
                    Description:  Optional: Security Context
                    Properties:
                      Allow Privilege Escalation:
                        Description:  AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Capabilities:
                        Description:  The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Add:
                            Description:  Added capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                          Drop:
                            Description:  Removed capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                        Type:               object
                      Privileged:
                        Description:  Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Proc Mount:
                        Description:  procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
                        Type:         string
                      Read Only Root Filesystem:
                        Description:  Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Run As Group:
                        Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Run As Non Root:
                        Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Type:         boolean
                      Run As User:
                        Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Se Linux Options:
                        Description:  The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Level:
                            Description:  Level is SELinux level label that applies to the container.
                            Type:         string
                          Role:
                            Description:  Role is a SELinux role label that applies to the container.
                            Type:         string
                          Type:
                            Description:  Type is a SELinux type label that applies to the container.
                            Type:         string
                          User:
                            Description:  User is a SELinux user label that applies to the container.
                            Type:         string
                        Type:             object
                      Seccomp Profile:
                        Description:  The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Localhost Profile:
                            Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                            Type:         string
                          Type:
                            Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Windows Options:
                        Description:  The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                        Properties:
                          Gmsa Credential Spec:
                            Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            Type:         string
                          Gmsa Credential Spec Name:
                            Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            Type:         string
                          Host Process:
                            Description:  HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                            Type:         boolean
                          Run As User Name:
                            Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         string
                        Type:             object
                    Type:                 object
                  Version:
                    Description:  DCGM image tag
                    Type:         string
                Type:             object
              Device Plugin:
                Description:  DevicePlugin component spec
                Properties:
                  Args:
                    Description:  Optional: List of arguments
                    Items:
                      Type:  string
                    Type:    array
                  Env:
                    Description:  Optional: List of environment variables
                    Items:
                      Description:  EnvVar represents an environment variable present in a Container.
                      Properties:
                        Name:
                          Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                          Type:         string
                        Value:
                          Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                          Type:         string
                        Value From:
                          Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                          Properties:
                            Config Map Key Ref:
                              Description:  Selects a key of a ConfigMap.
                              Properties:
                                Key:
                                  Description:  The key to select.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                            Field Ref:
                              Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              Properties:
                                API Version:
                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  Type:         string
                                Field Path:
                                  Description:  Path of the field to select in the specified API version.
                                  Type:         string
                              Required:
                                fieldPath
                              Type:  object
                            Resource Field Ref:
                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              Properties:
                                Container Name:
                                  Description:  Container name: required for volumes, optional for env vars
                                  Type:         string
                                Divisor:
                                  Any Of:
                                    Type:                              integer
                                    Type:                              string
                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                                Resource:
                                  Description:  Required: resource to select
                                  Type:         string
                              Required:
                                resource
                              Type:  object
                            Secret Key Ref:
                              Description:  Selects a key of a secret in the pod's namespace
                              Properties:
                                Key:
                                  Description:  The key of the secret to select from.  Must be a valid secret key.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the Secret or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                          Type:      object
                      Required:
                        name
                      Type:  object
                    Type:    array
                  Image:
                    Description:  DevicePlugin image name
                    Pattern:      [a-zA-Z0-9\-]+
                    Type:         string
                  Image Pull Policy:
                    Description:  Image pull policy
                    Type:         string
                  Image Pull Secrets:
                    Description:  Image pull secrets
                    Items:
                      Type:  string
                    Type:    array
                  Repository:
                    Description:  DevicePlugin image repository
                    Type:         string
                  Resources:
                    Description:  Optional: Define resources requests and limits for each pod
                    Properties:
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                    Type:                                      object
                  Security Context:
                    Description:  Optional: Security Context
                    Properties:
                      Allow Privilege Escalation:
                        Description:  AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Capabilities:
                        Description:  The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Add:
                            Description:  Added capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                          Drop:
                            Description:  Removed capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                        Type:               object
                      Privileged:
                        Description:  Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Proc Mount:
                        Description:  procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
                        Type:         string
                      Read Only Root Filesystem:
                        Description:  Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Run As Group:
                        Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Run As Non Root:
                        Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Type:         boolean
                      Run As User:
                        Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Se Linux Options:
                        Description:  The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Level:
                            Description:  Level is SELinux level label that applies to the container.
                            Type:         string
                          Role:
                            Description:  Role is a SELinux role label that applies to the container.
                            Type:         string
                          Type:
                            Description:  Type is a SELinux type label that applies to the container.
                            Type:         string
                          User:
                            Description:  User is a SELinux user label that applies to the container.
                            Type:         string
                        Type:             object
                      Seccomp Profile:
                        Description:  The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Localhost Profile:
                            Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                            Type:         string
                          Type:
                            Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Windows Options:
                        Description:  The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                        Properties:
                          Gmsa Credential Spec:
                            Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            Type:         string
                          Gmsa Credential Spec Name:
                            Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            Type:         string
                          Host Process:
                            Description:  HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                            Type:         boolean
                          Run As User Name:
                            Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         string
                        Type:             object
                    Type:                 object
                  Version:
                    Description:  DevicePlugin image tag
                    Type:         string
                Type:             object
              Driver:
                Description:  Driver component spec
                Properties:
                  Args:
                    Description:  Optional: List of arguments
                    Items:
                      Type:  string
                    Type:    array
                  Cert Config:
                    Description:  Optional: Custom certificates configuration for driver container
                    Properties:
                      Name:
                        Type:  string
                    Type:      object
                  Enabled:
                    Description:  Enabled indicates if deployment of driver through operator is enabled
                    Type:         boolean
                  Env:
                    Description:  Optional: List of environment variables
                    Items:
                      Description:  EnvVar represents an environment variable present in a Container.
                      Properties:
                        Name:
                          Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                          Type:         string
                        Value:
                          Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                          Type:         string
                        Value From:
                          Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                          Properties:
                            Config Map Key Ref:
                              Description:  Selects a key of a ConfigMap.
                              Properties:
                                Key:
                                  Description:  The key to select.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                            Field Ref:
                              Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              Properties:
                                API Version:
                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  Type:         string
                                Field Path:
                                  Description:  Path of the field to select in the specified API version.
                                  Type:         string
                              Required:
                                fieldPath
                              Type:  object
                            Resource Field Ref:
                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              Properties:
                                Container Name:
                                  Description:  Container name: required for volumes, optional for env vars
                                  Type:         string
                                Divisor:
                                  Any Of:
                                    Type:                              integer
                                    Type:                              string
                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                                Resource:
                                  Description:  Required: resource to select
                                  Type:         string
                              Required:
                                resource
                              Type:  object
                            Secret Key Ref:
                              Description:  Selects a key of a secret in the pod's namespace
                              Properties:
                                Key:
                                  Description:  The key of the secret to select from.  Must be a valid secret key.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the Secret or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                          Type:      object
                      Required:
                        name
                      Type:  object
                    Type:    array
                  Image:
                    Description:  Driver image name
                    Pattern:      [a-zA-Z0-9\-]+
                    Type:         string
                  Image Pull Policy:
                    Description:  Image pull policy
                    Type:         string
                  Image Pull Secrets:
                    Description:  Image pull secrets
                    Items:
                      Type:  string
                    Type:    array
                  Kernel Module Config:
                    Description:  Optional: Kernel module configuration parameters for the NVIDIA driver
                    Properties:
                      Name:
                        Type:  string
                    Type:      object
                  Licensing Config:
                    Description:  Optional: Licensing configuration for vGPU drivers
                    Properties:
                      Config Map Name:
                        Type:  string
                      Nls Enabled:
                        Description:  NLSEnabled indicates if NLS is used for licensing.
                        Type:         boolean
                    Type:             object
                  Manager:
                    Description:  Manager represents configuration for driver manager initContainer
                    Properties:
                      Env:
                        Description:  Optional: List of environment variables
                        Items:
                          Description:  EnvVar represents an environment variable present in a Container.
                          Properties:
                            Name:
                              Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                              Type:         string
                            Value:
                              Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                              Type:         string
                            Value From:
                              Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                              Properties:
                                Config Map Key Ref:
                                  Description:  Selects a key of a ConfigMap.
                                  Properties:
                                    Key:
                                      Description:  The key to select.
                                      Type:         string
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                    Optional:
                                      Description:  Specify whether the ConfigMap or its key must be defined
                                      Type:         boolean
                                  Required:
                                    key
                                  Type:  object
                                Field Ref:
                                  Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  Properties:
                                    API Version:
                                      Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      Type:         string
                                    Field Path:
                                      Description:  Path of the field to select in the specified API version.
                                      Type:         string
                                  Required:
                                    fieldPath
                                  Type:  object
                                Resource Field Ref:
                                  Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  Properties:
                                    Container Name:
                                      Description:  Container name: required for volumes, optional for env vars
                                      Type:         string
                                    Divisor:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                      Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      X - Kubernetes - Int - Or - String:  true
                                    Resource:
                                      Description:  Required: resource to select
                                      Type:         string
                                  Required:
                                    resource
                                  Type:  object
                                Secret Key Ref:
                                  Description:  Selects a key of a secret in the pod's namespace
                                  Properties:
                                    Key:
                                      Description:  The key of the secret to select from.  Must be a valid secret key.
                                      Type:         string
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                    Optional:
                                      Description:  Specify whether the Secret or its key must be defined
                                      Type:         boolean
                                  Required:
                                    key
                                  Type:  object
                              Type:      object
                          Required:
                            name
                          Type:  object
                        Type:    array
                      Image:
                        Description:  Image represents Driver-Manager image name
                        Pattern:      [a-zA-Z0-9\-]+
                        Type:         string
                      Image Pull Policy:
                        Description:  Image pull policy
                        Type:         string
                      Image Pull Secrets:
                        Description:  Image pull secrets
                        Items:
                          Type:  string
                        Type:    array
                      Repository:
                        Description:  Repository represents Driver-Manager repository path
                        Type:         string
                      Version:
                        Description:  Version represents Driver-Manager image tag(version)
                        Type:         string
                    Type:             object
                  Rdma:
                    Description:  GPUDirectRDMASpec defines the properties for nv_peer_mem deployment
                    Properties:
                      Enabled:
                        Description:  Enabled indicates if GPUDirect RDMA is enabled through GPU operator
                        Type:         boolean
                      Use Host Mofed:
                        Description:  UseHostMOFED indicates to use MOFED drivers directly installed on the host to enable GPUDirect RDMA
                        Type:         boolean
                    Type:             object
                  Repo Config:
                    Description:  Optional: Custom repo configuration for driver container
                    Properties:
                      Config Map Name:
                        Type:  string
                    Type:      object
                  Repository:
                    Description:  Driver image repository
                    Type:         string
                  Resources:
                    Description:  Optional: Define resources requests and limits for each pod
                    Properties:
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                    Type:                                      object
                  Security Context:
                    Description:  Optional: Security Context
                    Properties:
                      Allow Privilege Escalation:
                        Description:  AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Capabilities:
                        Description:  The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Add:
                            Description:  Added capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                          Drop:
                            Description:  Removed capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                        Type:               object
                      Privileged:
                        Description:  Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Proc Mount:
                        Description:  procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
                        Type:         string
                      Read Only Root Filesystem:
                        Description:  Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Run As Group:
                        Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Run As Non Root:
                        Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Type:         boolean
                      Run As User:
                        Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Se Linux Options:
                        Description:  The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Level:
                            Description:  Level is SELinux level label that applies to the container.
                            Type:         string
                          Role:
                            Description:  Role is a SELinux role label that applies to the container.
                            Type:         string
                          Type:
                            Description:  Type is a SELinux type label that applies to the container.
                            Type:         string
                          User:
                            Description:  User is a SELinux user label that applies to the container.
                            Type:         string
                        Type:             object
                      Seccomp Profile:
                        Description:  The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Localhost Profile:
                            Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                            Type:         string
                          Type:
                            Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Windows Options:
                        Description:  The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                        Properties:
                          Gmsa Credential Spec:
                            Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            Type:         string
                          Gmsa Credential Spec Name:
                            Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            Type:         string
                          Host Process:
                            Description:  HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                            Type:         boolean
                          Run As User Name:
                            Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         string
                        Type:             object
                    Type:                 object
                  use_ocp_driver_toolkit:
                    Description:  UseOpenShiftDriverToolkit indicates if DriverToolkit image should be used on OpenShift to build and install driver modules
                    Type:         boolean
                  Version:
                    Description:  Driver image tag
                    Type:         string
                  Virtual Topology:
                    Description:  Optional: Virtual Topology Daemon configuration for vGPU drivers
                    Properties:
                      Config:
                        Description:  Optional: Config name representing virtual topology daemon configuration file nvidia-topologyd.conf
                        Type:         string
                    Type:             object
                Type:                 object
              Gds:
                Description:  GPUDirectStorage defines the spec for GDS components(Experimental)
                Properties:
                  Args:
                    Description:  Optional: List of arguments
                    Items:
                      Type:  string
                    Type:    array
                  Enabled:
                    Description:  Enabled indicates if GPUDirect Storage is enabled through GPU operator
                    Type:         boolean
                  Env:
                    Description:  Optional: List of environment variables
                    Items:
                      Description:  EnvVar represents an environment variable present in a Container.
                      Properties:
                        Name:
                          Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                          Type:         string
                        Value:
                          Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                          Type:         string
                        Value From:
                          Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                          Properties:
                            Config Map Key Ref:
                              Description:  Selects a key of a ConfigMap.
                              Properties:
                                Key:
                                  Description:  The key to select.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                            Field Ref:
                              Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              Properties:
                                API Version:
                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  Type:         string
                                Field Path:
                                  Description:  Path of the field to select in the specified API version.
                                  Type:         string
                              Required:
                                fieldPath
                              Type:  object
                            Resource Field Ref:
                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              Properties:
                                Container Name:
                                  Description:  Container name: required for volumes, optional for env vars
                                  Type:         string
                                Divisor:
                                  Any Of:
                                    Type:                              integer
                                    Type:                              string
                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                                Resource:
                                  Description:  Required: resource to select
                                  Type:         string
                              Required:
                                resource
                              Type:  object
                            Secret Key Ref:
                              Description:  Selects a key of a secret in the pod's namespace
                              Properties:
                                Key:
                                  Description:  The key of the secret to select from.  Must be a valid secret key.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the Secret or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                          Type:      object
                      Required:
                        name
                      Type:  object
                    Type:    array
                  Image:
                    Description:  Driver image name
                    Pattern:      [a-zA-Z0-9\-]+
                    Type:         string
                  Image Pull Policy:
                    Description:  Image pull policy
                    Type:         string
                  Image Pull Secrets:
                    Description:  Image pull secrets
                    Items:
                      Type:  string
                    Type:    array
                  Repository:
                    Description:  Driver image repository
                    Type:         string
                  Version:
                    Description:  Driver image tag
                    Type:         string
                Type:             object
              Gfd:
                Description:  GPUFeatureDiscovery spec
                Properties:
                  Args:
                    Description:  Optional: List of arguments
                    Items:
                      Type:  string
                    Type:    array
                  Env:
                    Description:  Optional: List of environment variables
                    Items:
                      Description:  EnvVar represents an environment variable present in a Container.
                      Properties:
                        Name:
                          Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                          Type:         string
                        Value:
                          Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                          Type:         string
                        Value From:
                          Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                          Properties:
                            Config Map Key Ref:
                              Description:  Selects a key of a ConfigMap.
                              Properties:
                                Key:
                                  Description:  The key to select.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                            Field Ref:
                              Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              Properties:
                                API Version:
                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  Type:         string
                                Field Path:
                                  Description:  Path of the field to select in the specified API version.
                                  Type:         string
                              Required:
                                fieldPath
                              Type:  object
                            Resource Field Ref:
                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              Properties:
                                Container Name:
                                  Description:  Container name: required for volumes, optional for env vars
                                  Type:         string
                                Divisor:
                                  Any Of:
                                    Type:                              integer
                                    Type:                              string
                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                                Resource:
                                  Description:  Required: resource to select
                                  Type:         string
                              Required:
                                resource
                              Type:  object
                            Secret Key Ref:
                              Description:  Selects a key of a secret in the pod's namespace
                              Properties:
                                Key:
                                  Description:  The key of the secret to select from.  Must be a valid secret key.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the Secret or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                          Type:      object
                      Required:
                        name
                      Type:  object
                    Type:    array
                  Image:
                    Description:  GFD image name
                    Pattern:      [a-zA-Z0-9\-]+
                    Type:         string
                  Image Pull Policy:
                    Description:  Image pull policy
                    Type:         string
                  Image Pull Secrets:
                    Description:  Image pull secrets
                    Items:
                      Type:  string
                    Type:    array
                  Repository:
                    Description:  GFD image repository
                    Type:         string
                  Resources:
                    Description:  Optional: Define resources requests and limits for each pod
                    Properties:
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                    Type:                                      object
                  Security Context:
                    Description:  Optional: Security Context
                    Properties:
                      Allow Privilege Escalation:
                        Description:  AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Capabilities:
                        Description:  The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Add:
                            Description:  Added capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                          Drop:
                            Description:  Removed capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                        Type:               object
                      Privileged:
                        Description:  Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Proc Mount:
                        Description:  procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
                        Type:         string
                      Read Only Root Filesystem:
                        Description:  Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Run As Group:
                        Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Run As Non Root:
                        Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Type:         boolean
                      Run As User:
                        Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Se Linux Options:
                        Description:  The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Level:
                            Description:  Level is SELinux level label that applies to the container.
                            Type:         string
                          Role:
                            Description:  Role is a SELinux role label that applies to the container.
                            Type:         string
                          Type:
                            Description:  Type is a SELinux type label that applies to the container.
                            Type:         string
                          User:
                            Description:  User is a SELinux user label that applies to the container.
                            Type:         string
                        Type:             object
                      Seccomp Profile:
                        Description:  The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Localhost Profile:
                            Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                            Type:         string
                          Type:
                            Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Windows Options:
                        Description:  The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                        Properties:
                          Gmsa Credential Spec:
                            Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            Type:         string
                          Gmsa Credential Spec Name:
                            Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            Type:         string
                          Host Process:
                            Description:  HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                            Type:         boolean
                          Run As User Name:
                            Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         string
                        Type:             object
                    Type:                 object
                  Version:
                    Description:  GFD image tag
                    Type:         string
                Type:             object
              Mig:
                Description:  MIG spec
                Properties:
                  Strategy:
                    Description:  Optional: MIGStrategy to apply for GFD and Device-Plugin
                    Enum:
                      none
                      single
                      mixed
                    Type:  string
                Type:      object
              Mig Manager:
                Description:  MIGManager for configuration to deploy MIG Manager
                Properties:
                  Args:
                    Description:  Optional: List of arguments
                    Items:
                      Type:  string
                    Type:    array
                  Config:
                    Description:  Optional: Custom mig-parted configuration for MIG Manager container
                    Properties:
                      Name:
                        Description:  ConfigMap name
                        Type:         string
                    Type:             object
                  Enabled:
                    Description:  Enabled indicates if deployment of mig-manager is enabled
                    Type:         boolean
                  Env:
                    Description:  Optional: List of environment variables
                    Items:
                      Description:  EnvVar represents an environment variable present in a Container.
                      Properties:
                        Name:
                          Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                          Type:         string
                        Value:
                          Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                          Type:         string
                        Value From:
                          Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                          Properties:
                            Config Map Key Ref:
                              Description:  Selects a key of a ConfigMap.
                              Properties:
                                Key:
                                  Description:  The key to select.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                            Field Ref:
                              Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              Properties:
                                API Version:
                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  Type:         string
                                Field Path:
                                  Description:  Path of the field to select in the specified API version.
                                  Type:         string
                              Required:
                                fieldPath
                              Type:  object
                            Resource Field Ref:
                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              Properties:
                                Container Name:
                                  Description:  Container name: required for volumes, optional for env vars
                                  Type:         string
                                Divisor:
                                  Any Of:
                                    Type:                              integer
                                    Type:                              string
                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                                Resource:
                                  Description:  Required: resource to select
                                  Type:         string
                              Required:
                                resource
                              Type:  object
                            Secret Key Ref:
                              Description:  Selects a key of a secret in the pod's namespace
                              Properties:
                                Key:
                                  Description:  The key of the secret to select from.  Must be a valid secret key.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the Secret or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                          Type:      object
                      Required:
                        name
                      Type:  object
                    Type:    array
                  Gpu Clients Config:
                    Description:  Optional: Custom gpu-clients configuration for MIG Manager container
                    Properties:
                      Name:
                        Description:  ConfigMap name
                        Type:         string
                    Type:             object
                  Image:
                    Description:  mig-manager image name
                    Pattern:      [a-zA-Z0-9\-]+
                    Type:         string
                  Image Pull Policy:
                    Description:  Image pull policy
                    Type:         string
                  Image Pull Secrets:
                    Description:  Image pull secrets
                    Items:
                      Type:  string
                    Type:    array
                  Repository:
                    Description:  mig-manager image repository
                    Type:         string
                  Resources:
                    Description:  Optional: Define resources requests and limits for each pod
                    Properties:
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                    Type:                                      object
                  Security Context:
                    Description:  Optional: Security Context
                    Properties:
                      Allow Privilege Escalation:
                        Description:  AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Capabilities:
                        Description:  The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Add:
                            Description:  Added capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                          Drop:
                            Description:  Removed capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                        Type:               object
                      Privileged:
                        Description:  Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Proc Mount:
                        Description:  procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
                        Type:         string
                      Read Only Root Filesystem:
                        Description:  Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Run As Group:
                        Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Run As Non Root:
                        Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Type:         boolean
                      Run As User:
                        Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Se Linux Options:
                        Description:  The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Level:
                            Description:  Level is SELinux level label that applies to the container.
                            Type:         string
                          Role:
                            Description:  Role is a SELinux role label that applies to the container.
                            Type:         string
                          Type:
                            Description:  Type is a SELinux type label that applies to the container.
                            Type:         string
                          User:
                            Description:  User is a SELinux user label that applies to the container.
                            Type:         string
                        Type:             object
                      Seccomp Profile:
                        Description:  The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Localhost Profile:
                            Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                            Type:         string
                          Type:
                            Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Windows Options:
                        Description:  The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                        Properties:
                          Gmsa Credential Spec:
                            Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            Type:         string
                          Gmsa Credential Spec Name:
                            Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            Type:         string
                          Host Process:
                            Description:  HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                            Type:         boolean
                          Run As User Name:
                            Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         string
                        Type:             object
                    Type:                 object
                  Version:
                    Description:  mig-manager image tag
                    Type:         string
                Type:             object
              Node Status Exporter:
                Description:  NodeStatusExporter spec
                Properties:
                  Args:
                    Description:  Optional: List of arguments
                    Items:
                      Type:  string
                    Type:    array
                  Enabled:
                    Description:  Enabled indicates if deployment of node-status-exporter is enabled.
                    Type:         boolean
                  Env:
                    Description:  Optional: List of environment variables
                    Items:
                      Description:  EnvVar represents an environment variable present in a Container.
                      Properties:
                        Name:
                          Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                          Type:         string
                        Value:
                          Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                          Type:         string
                        Value From:
                          Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                          Properties:
                            Config Map Key Ref:
                              Description:  Selects a key of a ConfigMap.
                              Properties:
                                Key:
                                  Description:  The key to select.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                            Field Ref:
                              Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              Properties:
                                API Version:
                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  Type:         string
                                Field Path:
                                  Description:  Path of the field to select in the specified API version.
                                  Type:         string
                              Required:
                                fieldPath
                              Type:  object
                            Resource Field Ref:
                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              Properties:
                                Container Name:
                                  Description:  Container name: required for volumes, optional for env vars
                                  Type:         string
                                Divisor:
                                  Any Of:
                                    Type:                              integer
                                    Type:                              string
                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                                Resource:
                                  Description:  Required: resource to select
                                  Type:         string
                              Required:
                                resource
                              Type:  object
                            Secret Key Ref:
                              Description:  Selects a key of a secret in the pod's namespace
                              Properties:
                                Key:
                                  Description:  The key of the secret to select from.  Must be a valid secret key.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the Secret or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                          Type:      object
                      Required:
                        name
                      Type:  object
                    Type:    array
                  Image:
                    Description:  node-status-exporter image name
                    Pattern:      [a-zA-Z0-9\-]+
                    Type:         string
                  Image Pull Policy:
                    Description:  Image pull policy
                    Type:         string
                  Image Pull Secrets:
                    Description:  Image pull secrets
                    Items:
                      Type:  string
                    Type:    array
                  Repository:
                    Description:  node-status-exporter image repository
                    Type:         string
                  Resources:
                    Description:  Optional: Define resources requests and limits for each pod
                    Properties:
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                    Type:                                      object
                  Security Context:
                    Description:  Optional: Security Context
                    Properties:
                      Allow Privilege Escalation:
                        Description:  AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Capabilities:
                        Description:  The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Add:
                            Description:  Added capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                          Drop:
                            Description:  Removed capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                        Type:               object
                      Privileged:
                        Description:  Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Proc Mount:
                        Description:  procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
                        Type:         string
                      Read Only Root Filesystem:
                        Description:  Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Run As Group:
                        Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Run As Non Root:
                        Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Type:         boolean
                      Run As User:
                        Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Se Linux Options:
                        Description:  The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Level:
                            Description:  Level is SELinux level label that applies to the container.
                            Type:         string
                          Role:
                            Description:  Role is a SELinux role label that applies to the container.
                            Type:         string
                          Type:
                            Description:  Type is a SELinux type label that applies to the container.
                            Type:         string
                          User:
                            Description:  User is a SELinux user label that applies to the container.
                            Type:         string
                        Type:             object
                      Seccomp Profile:
                        Description:  The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Localhost Profile:
                            Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                            Type:         string
                          Type:
                            Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Windows Options:
                        Description:  The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                        Properties:
                          Gmsa Credential Spec:
                            Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            Type:         string
                          Gmsa Credential Spec Name:
                            Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            Type:         string
                          Host Process:
                            Description:  HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                            Type:         boolean
                          Run As User Name:
                            Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         string
                        Type:             object
                    Type:                 object
                  Version:
                    Description:  node-status-exporter image tag
                    Type:         string
                Type:             object
              Operator:
                Description:  Operator component spec
                Properties:
                  Default Runtime:
                    Default:      docker
                    Description:  Runtime defines container runtime type
                    Enum:
                      docker
                      crio
                      containerd
                    Type:  string
                  Init Container:
                    Description:  InitContainerSpec describes configuration for initContainer image used with all components
                    Properties:
                      Image:
                        Description:  Image represents image name
                        Pattern:      [a-zA-Z0-9\-]+
                        Type:         string
                      Image Pull Policy:
                        Description:  Image pull policy
                        Type:         string
                      Image Pull Secrets:
                        Description:  Image pull secrets
                        Items:
                          Type:  string
                        Type:    array
                      Repository:
                        Description:  Repository represents image repository path
                        Type:         string
                      Version:
                        Description:  Version represents image tag(version)
                        Type:         string
                    Type:             object
                  Runtime Class:
                    Default:  nvidia
                    Type:     string
                Required:
                  defaultRuntime
                Type:  object
              Psp:
                Description:  PSP defines spec for handling PodSecurityPolicies
                Properties:
                  Enabled:
                    Description:  Enabled indicates if PodSecurityPolicies needs to be enabled for all Pods
                    Type:         boolean
                Type:             object
              Toolkit:
                Description:  Toolkit component spec
                Properties:
                  Args:
                    Description:  Optional: List of arguments
                    Items:
                      Type:  string
                    Type:    array
                  Enabled:
                    Description:  Enabled indicates if deployment of container-toolkit through operator is enabled
                    Type:         boolean
                  Env:
                    Description:  Optional: List of environment variables
                    Items:
                      Description:  EnvVar represents an environment variable present in a Container.
                      Properties:
                        Name:
                          Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                          Type:         string
                        Value:
                          Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                          Type:         string
                        Value From:
                          Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                          Properties:
                            Config Map Key Ref:
                              Description:  Selects a key of a ConfigMap.
                              Properties:
                                Key:
                                  Description:  The key to select.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                            Field Ref:
                              Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              Properties:
                                API Version:
                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  Type:         string
                                Field Path:
                                  Description:  Path of the field to select in the specified API version.
                                  Type:         string
                              Required:
                                fieldPath
                              Type:  object
                            Resource Field Ref:
                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              Properties:
                                Container Name:
                                  Description:  Container name: required for volumes, optional for env vars
                                  Type:         string
                                Divisor:
                                  Any Of:
                                    Type:                              integer
                                    Type:                              string
                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                                Resource:
                                  Description:  Required: resource to select
                                  Type:         string
                              Required:
                                resource
                              Type:  object
                            Secret Key Ref:
                              Description:  Selects a key of a secret in the pod's namespace
                              Properties:
                                Key:
                                  Description:  The key of the secret to select from.  Must be a valid secret key.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the Secret or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                          Type:      object
                      Required:
                        name
                      Type:  object
                    Type:    array
                  Image:
                    Description:  Toolkit image name
                    Pattern:      [a-zA-Z0-9\-]+
                    Type:         string
                  Image Pull Policy:
                    Description:  Image pull policy
                    Type:         string
                  Image Pull Secrets:
                    Description:  Image pull secrets
                    Items:
                      Type:  string
                    Type:    array
                  Repository:
                    Description:  Toolkit image repository
                    Type:         string
                  Resources:
                    Description:  Optional: Define resources requests and limits for each pod
                    Properties:
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                    Type:                                      object
                  Security Context:
                    Description:  Optional: Security Context
                    Properties:
                      Allow Privilege Escalation:
                        Description:  AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Capabilities:
                        Description:  The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Add:
                            Description:  Added capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                          Drop:
                            Description:  Removed capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                        Type:               object
                      Privileged:
                        Description:  Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Proc Mount:
                        Description:  procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
                        Type:         string
                      Read Only Root Filesystem:
                        Description:  Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Run As Group:
                        Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Run As Non Root:
                        Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Type:         boolean
                      Run As User:
                        Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Se Linux Options:
                        Description:  The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Level:
                            Description:  Level is SELinux level label that applies to the container.
                            Type:         string
                          Role:
                            Description:  Role is a SELinux role label that applies to the container.
                            Type:         string
                          Type:
                            Description:  Type is a SELinux type label that applies to the container.
                            Type:         string
                          User:
                            Description:  User is a SELinux user label that applies to the container.
                            Type:         string
                        Type:             object
                      Seccomp Profile:
                        Description:  The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Localhost Profile:
                            Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                            Type:         string
                          Type:
                            Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Windows Options:
                        Description:  The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                        Properties:
                          Gmsa Credential Spec:
                            Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            Type:         string
                          Gmsa Credential Spec Name:
                            Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            Type:         string
                          Host Process:
                            Description:  HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                            Type:         boolean
                          Run As User Name:
                            Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         string
                        Type:             object
                    Type:                 object
                  Version:
                    Description:  Toolkit image tag
                    Type:         string
                Type:             object
              Validator:
                Description:  Validator defines the spec for operator-validator daemonset
                Properties:
                  Args:
                    Description:  Optional: List of arguments
                    Items:
                      Type:  string
                    Type:    array
                  Cuda:
                    Description:  CUDA validator spec
                    Properties:
                      Env:
                        Description:  Optional: List of environment variables
                        Items:
                          Description:  EnvVar represents an environment variable present in a Container.
                          Properties:
                            Name:
                              Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                              Type:         string
                            Value:
                              Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                              Type:         string
                            Value From:
                              Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                              Properties:
                                Config Map Key Ref:
                                  Description:  Selects a key of a ConfigMap.
                                  Properties:
                                    Key:
                                      Description:  The key to select.
                                      Type:         string
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                    Optional:
                                      Description:  Specify whether the ConfigMap or its key must be defined
                                      Type:         boolean
                                  Required:
                                    key
                                  Type:  object
                                Field Ref:
                                  Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  Properties:
                                    API Version:
                                      Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      Type:         string
                                    Field Path:
                                      Description:  Path of the field to select in the specified API version.
                                      Type:         string
                                  Required:
                                    fieldPath
                                  Type:  object
                                Resource Field Ref:
                                  Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  Properties:
                                    Container Name:
                                      Description:  Container name: required for volumes, optional for env vars
                                      Type:         string
                                    Divisor:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                      Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      X - Kubernetes - Int - Or - String:  true
                                    Resource:
                                      Description:  Required: resource to select
                                      Type:         string
                                  Required:
                                    resource
                                  Type:  object
                                Secret Key Ref:
                                  Description:  Selects a key of a secret in the pod's namespace
                                  Properties:
                                    Key:
                                      Description:  The key of the secret to select from.  Must be a valid secret key.
                                      Type:         string
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                    Optional:
                                      Description:  Specify whether the Secret or its key must be defined
                                      Type:         boolean
                                  Required:
                                    key
                                  Type:  object
                              Type:      object
                          Required:
                            name
                          Type:  object
                        Type:    array
                    Type:        object
                  Driver:
                    Description:  Toolkit validator spec
                    Properties:
                      Env:
                        Description:  Optional: List of environment variables
                        Items:
                          Description:  EnvVar represents an environment variable present in a Container.
                          Properties:
                            Name:
                              Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                              Type:         string
                            Value:
                              Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                              Type:         string
                            Value From:
                              Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                              Properties:
                                Config Map Key Ref:
                                  Description:  Selects a key of a ConfigMap.
                                  Properties:
                                    Key:
                                      Description:  The key to select.
                                      Type:         string
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                    Optional:
                                      Description:  Specify whether the ConfigMap or its key must be defined
                                      Type:         boolean
                                  Required:
                                    key
                                  Type:  object
                                Field Ref:
                                  Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  Properties:
                                    API Version:
                                      Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      Type:         string
                                    Field Path:
                                      Description:  Path of the field to select in the specified API version.
                                      Type:         string
                                  Required:
                                    fieldPath
                                  Type:  object
                                Resource Field Ref:
                                  Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  Properties:
                                    Container Name:
                                      Description:  Container name: required for volumes, optional for env vars
                                      Type:         string
                                    Divisor:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                      Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      X - Kubernetes - Int - Or - String:  true
                                    Resource:
                                      Description:  Required: resource to select
                                      Type:         string
                                  Required:
                                    resource
                                  Type:  object
                                Secret Key Ref:
                                  Description:  Selects a key of a secret in the pod's namespace
                                  Properties:
                                    Key:
                                      Description:  The key of the secret to select from.  Must be a valid secret key.
                                      Type:         string
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                    Optional:
                                      Description:  Specify whether the Secret or its key must be defined
                                      Type:         boolean
                                  Required:
                                    key
                                  Type:  object
                              Type:      object
                          Required:
                            name
                          Type:  object
                        Type:    array
                    Type:        object
                  Env:
                    Description:  Optional: List of environment variables
                    Items:
                      Description:  EnvVar represents an environment variable present in a Container.
                      Properties:
                        Name:
                          Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                          Type:         string
                        Value:
                          Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                          Type:         string
                        Value From:
                          Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                          Properties:
                            Config Map Key Ref:
                              Description:  Selects a key of a ConfigMap.
                              Properties:
                                Key:
                                  Description:  The key to select.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the ConfigMap or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                            Field Ref:
                              Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              Properties:
                                API Version:
                                  Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  Type:         string
                                Field Path:
                                  Description:  Path of the field to select in the specified API version.
                                  Type:         string
                              Required:
                                fieldPath
                              Type:  object
                            Resource Field Ref:
                              Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              Properties:
                                Container Name:
                                  Description:  Container name: required for volumes, optional for env vars
                                  Type:         string
                                Divisor:
                                  Any Of:
                                    Type:                              integer
                                    Type:                              string
                                  Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                  Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  X - Kubernetes - Int - Or - String:  true
                                Resource:
                                  Description:  Required: resource to select
                                  Type:         string
                              Required:
                                resource
                              Type:  object
                            Secret Key Ref:
                              Description:  Selects a key of a secret in the pod's namespace
                              Properties:
                                Key:
                                  Description:  The key of the secret to select from.  Must be a valid secret key.
                                  Type:         string
                                Name:
                                  Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                  Type:         string
                                Optional:
                                  Description:  Specify whether the Secret or its key must be defined
                                  Type:         boolean
                              Required:
                                key
                              Type:  object
                          Type:      object
                      Required:
                        name
                      Type:  object
                    Type:    array
                  Image:
                    Description:  Validator image name
                    Pattern:      [a-zA-Z0-9\-]+
                    Type:         string
                  Image Pull Policy:
                    Description:  Image pull policy
                    Type:         string
                  Image Pull Secrets:
                    Description:  Image pull secrets
                    Items:
                      Type:  string
                    Type:    array
                  Plugin:
                    Description:  Plugin validator spec
                    Properties:
                      Env:
                        Description:  Optional: List of environment variables
                        Items:
                          Description:  EnvVar represents an environment variable present in a Container.
                          Properties:
                            Name:
                              Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                              Type:         string
                            Value:
                              Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                              Type:         string
                            Value From:
                              Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                              Properties:
                                Config Map Key Ref:
                                  Description:  Selects a key of a ConfigMap.
                                  Properties:
                                    Key:
                                      Description:  The key to select.
                                      Type:         string
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                    Optional:
                                      Description:  Specify whether the ConfigMap or its key must be defined
                                      Type:         boolean
                                  Required:
                                    key
                                  Type:  object
                                Field Ref:
                                  Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  Properties:
                                    API Version:
                                      Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      Type:         string
                                    Field Path:
                                      Description:  Path of the field to select in the specified API version.
                                      Type:         string
                                  Required:
                                    fieldPath
                                  Type:  object
                                Resource Field Ref:
                                  Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  Properties:
                                    Container Name:
                                      Description:  Container name: required for volumes, optional for env vars
                                      Type:         string
                                    Divisor:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                      Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      X - Kubernetes - Int - Or - String:  true
                                    Resource:
                                      Description:  Required: resource to select
                                      Type:         string
                                  Required:
                                    resource
                                  Type:  object
                                Secret Key Ref:
                                  Description:  Selects a key of a secret in the pod's namespace
                                  Properties:
                                    Key:
                                      Description:  The key of the secret to select from.  Must be a valid secret key.
                                      Type:         string
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                    Optional:
                                      Description:  Specify whether the Secret or its key must be defined
                                      Type:         boolean
                                  Required:
                                    key
                                  Type:  object
                              Type:      object
                          Required:
                            name
                          Type:  object
                        Type:    array
                    Type:        object
                  Repository:
                    Description:  Validator image repository
                    Type:         string
                  Resources:
                    Description:  Optional: Define resources requests and limits for each pod
                    Properties:
                      Limits:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                      Requests:
                        Additional Properties:
                          Any Of:
                            Type:                              integer
                            Type:                              string
                          Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          X - Kubernetes - Int - Or - String:  true
                        Description:                           Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        Type:                                  object
                    Type:                                      object
                  Security Context:
                    Description:  Optional: Security Context
                    Properties:
                      Allow Privilege Escalation:
                        Description:  AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Capabilities:
                        Description:  The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Add:
                            Description:  Added capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                          Drop:
                            Description:  Removed capabilities
                            Items:
                              Description:  Capability represent POSIX capabilities type
                              Type:         string
                            Type:           array
                        Type:               object
                      Privileged:
                        Description:  Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Proc Mount:
                        Description:  procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
                        Type:         string
                      Read Only Root Filesystem:
                        Description:  Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
                        Type:         boolean
                      Run As Group:
                        Description:  The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Run As Non Root:
                        Description:  Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Type:         boolean
                      Run As User:
                        Description:  The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Format:       int64
                        Type:         integer
                      Se Linux Options:
                        Description:  The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Level:
                            Description:  Level is SELinux level label that applies to the container.
                            Type:         string
                          Role:
                            Description:  Role is a SELinux role label that applies to the container.
                            Type:         string
                          Type:
                            Description:  Type is a SELinux type label that applies to the container.
                            Type:         string
                          User:
                            Description:  User is a SELinux user label that applies to the container.
                            Type:         string
                        Type:             object
                      Seccomp Profile:
                        Description:  The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.
                        Properties:
                          Localhost Profile:
                            Description:  localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                            Type:         string
                          Type:
                            Description:  type indicates which kind of seccomp profile will be applied. Valid options are: 
 Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
                            Type:  string
                        Required:
                          type
                        Type:  object
                      Windows Options:
                        Description:  The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.
                        Properties:
                          Gmsa Credential Spec:
                            Description:  GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                            Type:         string
                          Gmsa Credential Spec Name:
                            Description:  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            Type:         string
                          Host Process:
                            Description:  HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
                            Type:         boolean
                          Run As User Name:
                            Description:  The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Type:         string
                        Type:             object
                    Type:                 object
                  Toolkit:
                    Description:  Toolkit validator spec
                    Properties:
                      Env:
                        Description:  Optional: List of environment variables
                        Items:
                          Description:  EnvVar represents an environment variable present in a Container.
                          Properties:
                            Name:
                              Description:  Name of the environment variable. Must be a C_IDENTIFIER.
                              Type:         string
                            Value:
                              Description:  Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
                              Type:         string
                            Value From:
                              Description:  Source for the environment variable's value. Cannot be used if value is not empty.
                              Properties:
                                Config Map Key Ref:
                                  Description:  Selects a key of a ConfigMap.
                                  Properties:
                                    Key:
                                      Description:  The key to select.
                                      Type:         string
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                    Optional:
                                      Description:  Specify whether the ConfigMap or its key must be defined
                                      Type:         boolean
                                  Required:
                                    key
                                  Type:  object
                                Field Ref:
                                  Description:  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  Properties:
                                    API Version:
                                      Description:  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      Type:         string
                                    Field Path:
                                      Description:  Path of the field to select in the specified API version.
                                      Type:         string
                                  Required:
                                    fieldPath
                                  Type:  object
                                Resource Field Ref:
                                  Description:  Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  Properties:
                                    Container Name:
                                      Description:  Container name: required for volumes, optional for env vars
                                      Type:         string
                                    Divisor:
                                      Any Of:
                                        Type:                              integer
                                        Type:                              string
                                      Description:                         Specifies the output format of the exposed resources, defaults to "1"
                                      Pattern:                             ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      X - Kubernetes - Int - Or - String:  true
                                    Resource:
                                      Description:  Required: resource to select
                                      Type:         string
                                  Required:
                                    resource
                                  Type:  object
                                Secret Key Ref:
                                  Description:  Selects a key of a secret in the pod's namespace
                                  Properties:
                                    Key:
                                      Description:  The key of the secret to select from.  Must be a valid secret key.
                                      Type:         string
                                    Name:
                                      Description:  Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
                                      Type:         string
                                    Optional:
                                      Description:  Specify whether the Secret or its key must be defined
                                      Type:         boolean
                                  Required:
                                    key
                                  Type:  object
                              Type:      object
                          Required:
                            name
                          Type:  object
                        Type:    array
                    Type:        object
                  Version:
                    Description:  Validator image tag
                    Type:         string
                Type:             object
            Required:
              daemonsets
              dcgm
              dcgmExporter
              devicePlugin
              driver
              gfd
              nodeStatusExporter
              operator
              toolkit
            Type:  object
          Status:
            Description:  ClusterPolicyStatus defines the observed state of ClusterPolicy
            Properties:
              Namespace:
                Description:  Namespace indicates a namespace in which the operator is installed
                Type:         string
              State:
                Description:  State indicates status of ClusterPolicy
                Enum:
                  ignored
                  ready
                  notReady
                Type:  string
            Required:
              state
            Type:  object
        Type:      object
    Served:        true
    Storage:       true
    Subresources:
      Status:
Status:
  Accepted Names:
    Kind:       ClusterPolicy
    List Kind:  ClusterPolicyList
    Plural:     clusterpolicies
    Singular:   clusterpolicy
  Conditions:
    Last Transition Time:  2022-06-13T17:25:33Z
    Message:               no conflicts found
    Reason:                NoConflicts
    Status:                True
    Type:                  NamesAccepted
    Last Transition Time:  2022-06-13T17:25:33Z
    Message:               the initial names have been accepted
    Reason:                InitialNamesAccepted
    Status:                True
    Type:                  Established
  Stored Versions:
    v1
Events:  <none>
